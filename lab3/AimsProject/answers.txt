1. Những lợi ích của Tính đa hình (Polymorphism) là gì?
Tính đa hình mang lại sự linh hoạt và khả năng mở rộng cho mã nguồn. Nó cho phép các đối tượng được xử lý như thể chúng là các thể hiện của lớp cha thay vì lớp thực sự của chúng.
Điều này giúp giảm sự lặp lại của mã, nâng cao khả năng bảo trì và cho phép sử dụng một giao diện chung cho một nhóm hành động tổng quát, giúp dễ dàng mở rộng hoặc chỉnh sửa chương trình với ít thay đổi nhất.

2. Tính kế thừa (Inheritance) hỗ trợ đạt được Tính đa hình trong Java như thế nào?
Tính kế thừa cho phép một lớp con thừa hưởng các phương thức và thuộc tính từ lớp cha. Thông qua kế thừa, lớp con có thể ghi đè (override) các phương thức để cung cấp hành vi cụ thể trong khi vẫn giữ nguyên giao diện.
Điều này cho phép tính đa hình xảy ra, khi một lời gọi phương thức có thể kích hoạt các cách triển khai khác nhau tùy thuộc vào kiểu đối tượng thực tế tại thời điểm chạy.

3. Sự khác biệt giữa Tính đa hình và Tính kế thừa trong Java là gì?

- Kế thừa là cơ chế tạo ra một lớp mới từ một lớp có sẵn, giúp tái sử dụng mã và thiết lập mối quan hệ cha-con giữa các lớp.
- Đa hình, ngược lại, là khả năng để các lớp khác nhau phản hồi theo những cách khác nhau đối với cùng một lời gọi phương thức.
- Kế thừa tập trung vào cấu trúc phân cấp và tổ chức lớp, trong khi đa hình tập trung vào hành vi và việc gọi phương thức một cách linh hoạt.
- Kế thừa là điều kiện cần để đạt được tính đa hình tại thời điểm chạy (runtime), nhưng đa hình mới là yếu tố giúp chương trình linh hoạt và dễ mở rộng.